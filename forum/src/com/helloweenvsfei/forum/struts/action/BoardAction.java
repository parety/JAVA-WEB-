/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.helloweenvsfei.forum.struts.action;

import java.util.Date;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.helloweenvsfei.forum.bean.Board;
import com.helloweenvsfei.forum.bean.Category;
import com.helloweenvsfei.forum.bean.Person;
import com.helloweenvsfei.forum.bean.Thread;
import com.helloweenvsfei.forum.pagination.Pagination;
import com.helloweenvsfei.forum.service.IBoardService;
import com.helloweenvsfei.forum.service.ICategoryService;
import com.helloweenvsfei.forum.service.IPersonService;
import com.helloweenvsfei.forum.service.IThreadService;
import com.helloweenvsfei.forum.struts.form.BoardForm;

/**
 * MyEclipse Struts Creation date: 07-04-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/board" name="boardForm"
 *                input="/form/board/listBoard.jsp" parameter="action"
 *                scope="request" validate="true"
 */
public class BoardAction extends ForumAction {

	private ICategoryService<Category> categoryService;

	private IBoardService<Board> boardService;

	private IThreadService<Thread> threadService;

	private IPersonService<Person> personService;

	@Override
	@SuppressWarnings("all")
	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		BoardForm boardForm = (BoardForm) form;

		Board board = boardService.find(Board.class, boardForm.getBoard()
				.getId());
		boardForm.setBoard(board);

		int totalCount = threadService.getTotalCount(
				" select count(t) from Thread t "
						+ " where t.deleted = false and t.board.id = "
						+ board.getId(), null);

		Pagination pagination = new Pagination(request, response);
		pagination.setRecordCount(totalCount);

		List<Thread> threadList = threadService.list(" select t from Thread t "
				+ " where t.deleted = false and t.board.id = " + board.getId()
				+ " order by t.dateLastReplied desc ", pagination
				.getFirstResult(), pagination.getPageSize(), null);

		request.setAttribute("board", board);
		request.setAttribute("pagination", pagination);
		request.setAttribute("threadList", threadList);

		boardForm.setTitle("帖子列表 - 版面：" + board.getName());

		return new ActionForward("list", "/form/thread/listThread.jsp", false);
	}

	public ActionForward initAdd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		BoardForm boardForm = (BoardForm) form;
		boardForm.setTitle("添加版面");

		List<Category> categoryList = categoryService
				.list(" from Category c where c.deleted = false ");

		request.setAttribute("categoryList", categoryList);

		return new ActionForward("add", "/form/board/addBoard.jsp", false);
	}

	public ActionForward add(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		BoardForm boardForm = (BoardForm) form;
		boardForm.setTitle("添加版面");

		Category category = categoryService.find(Category.class, boardForm
				.getCategory().getId());

		Board board = boardForm.getBoard();
		board.setCategory(category);
		board.setDateCreated(new Date());

		boardService.create(board);

		request.setAttribute("category", category);

		return new ActionForward("success", "/form/board/success.jsp", false);
	}

	public ActionForward initSetAdmin(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		BoardForm boardForm = (BoardForm) form;

		Board board = boardService.find(Board.class, boardForm.getBoard()
				.getId());

		List<Person> personList = personService
				.list(" from Person p where p.deleted = false ");

		int[] adminId = new int[board.getAdministrators().size()];

		int i = 0;
		for (Iterator<Person> it = board.getAdministrators().iterator(); it
				.hasNext(); i++) {
			Person p = it.next();
			adminId[i] = p.getId();
		}
		boardForm.setAdminId(adminId);

		request.setAttribute("board", board);
		request.setAttribute("personList", personList);

		boardForm.setTitle("设置管理员 - 版面：" + board.getName());

		return new ActionForward("success", "/form/board/setAdmin.jsp", false);
	}

	public ActionForward setAdmin(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		BoardForm boardForm = (BoardForm) form;

		Board board = boardService.find(Board.class, boardForm.getBoard()
				.getId());

		board.getAdministrators().clear();

		int[] adminId = boardForm.getAdminId();

		for (int i = 0; adminId != null && i < adminId.length; i++) {
			Person person = personService.find(Person.class, adminId[i]);
			board.getAdministrators().add(person);
		}

		boardService.save(board);

		boardForm.setTitle("设置管理员 - 版面：" + board.getName());

		return new ActionForward("success", "/form/board/success.jsp", false);
	}

	public IBoardService<Board> getBoardService() {
		return boardService;
	}

	public void setBoardService(IBoardService<Board> boardService) {
		this.boardService = boardService;
	}

	public ICategoryService<Category> getCategoryService() {
		return categoryService;
	}

	public void setCategoryService(ICategoryService<Category> categoryService) {
		this.categoryService = categoryService;
	}

	public IThreadService<Thread> getThreadService() {
		return threadService;
	}

	public void setThreadService(IThreadService<Thread> threadService) {
		this.threadService = threadService;
	}

	public IPersonService<Person> getPersonService() {
		return personService;
	}

	public void setPersonService(IPersonService<Person> personService) {
		this.personService = personService;
	}

}