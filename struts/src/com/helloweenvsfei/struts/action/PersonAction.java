/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.helloweenvsfei.struts.action;

import java.sql.Connection;
import java.sql.Date;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.helloweenvsfei.struts.bean.Person;
import com.helloweenvsfei.struts.dao.PersonDAO;
import com.helloweenvsfei.struts.form.PersonForm;

/**
 * MyEclipse Struts Creation date: 04-30-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/person" name="personForm" input="/form/addPerson.jsp"
 *                scope="request" validate="true"
 */
public class PersonAction extends Action {

	// 主方法
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		PersonForm personForm = (PersonForm) form;

		// 根据 PersonForm 的 action 字段决定执行哪种操作
		if ("add".equals(personForm.getAction())) {
			return add(mapping, form, request, response);
		} else if ("list".equals(personForm.getAction())) {
			return list(mapping, form, request, response);
		}

		return mapping.getInputForward();
	}

	// 主要处理 添加人员
	public ActionForward add(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		PersonForm personForm = (PersonForm) form;

		// 转化日期
		Date birthday = new Date(new SimpleDateFormat("yyyy-MM-dd").parse(
				personForm.getBirthday()).getTime());

		// 转化为普通的 Java Bean
		Person person = new Person();
		person.setAccount(personForm.getAccount());
		person.setName(personForm.getName());
		person.setSecret(personForm.getSecret());
		person.setCreateDate(new Timestamp(System.currentTimeMillis()));
		person.setBirthday(birthday);

		// 将 Form Bean 的 String[] 转化为 Java Bean 的 List 属性
		person.setHobby(Arrays.asList(personForm.getHobby()));

		// 调用 DAO 层模型
		PersonDAO personDAO = new PersonDAO();

		// 从 Struts 中获取数据源以及数据库连接
		Connection conn = getDataSource(request).getConnection();

		// 保存进数据库
		personDAO.addPerson(conn, person);

		request.setAttribute("person", person);

		return mapping.findForward("success");
	}

	// 主要处理 列出人员
	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		// 调用 DAO 层模型
		PersonDAO personDAO = new PersonDAO();

		// 读取所有的人员列表
		List<Person> personList = personDAO.listPersons(getDataSource(request)
				.getConnection());

		request.setAttribute("personList", personList);

		return mapping.findForward("list");
	}
}